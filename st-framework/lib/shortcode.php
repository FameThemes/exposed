<?php/** ******************** Shorcode for page builder******************************** */function st_blog_post_func( $atts, $content='' ) {    global $wp_query;    global $post, $paged;    $tmp_post = $post;    extract( shortcode_atts( array(        'title' => '',        'cats' => array(),        'numpost'=>5,        'exclude'=>'',        'orderby'=>'ID',        'order'=>'DESC',        'pbwith'=>'1_1',        'type'=>1,        'site_layout'=>'',        'show_title'=>'n',        'show_paging'=>'n'    ), $atts ) );    // $wc = $builder[$i]['pbwith']; old    $wc = $pbwith; // new    $w=  explode('_',$wc);    $t = intval($w[0]);    $m = intval($w[1]);    if($m>0 and $t>0){        $c = $t/$m;    }else{        $c=1;    }    $html ='';    // just only for one cate    if(is_string($cats)){        $cats = explode(',',$cats);    }    if (is_array($cats) && count($cats)>0) {        $cat =  $cats[0];        $cat_link =$cat_title='';        if($cat>0){            $cat_link = get_category_link($cat);            $cat_title = get_cat_name($cat);        }else{            // do some thing        }        if (in_array(0, $cats)) $cats = array();    }    if($title!=''){        $html ='             <div class="builder-title-wrapper clearfix">                <h3 class="builder-item-title">'.esc_html($title).'</h3>             </div>             ';    }elseif(isset($cat_link) && isset($cat_link) && $cat_link && $cat_title){        $html = '';    }    if(intval($numpost)<=0){        $numpost = (int) get_option('posts_per_page',10);    }else{        $numpost = intval($numpost);    }    $args = array( 'posts_per_page' => $numpost );    if($cats>0){        $args['category__in'] =  $cats;    }    if($exclude!=''){        $exclude= explode(',',$exclude);    }    $args['post__not_in'] = $exclude;    $args['orderby'] = $orderby;    $args['order'] = $order;    if($paged>0){        $args['paged'] =  $paged;    }else{        $paged = isset($_REQUEST['paged']) ? intval($_REQUEST['paged']) : 1;    }    // added in ver 1.3    if(st_is_wpml()){        $args['sippress_filters'] = true;        $args['language'] = get_bloginfo('language');    }    $new_query = new WP_Query($args);    $myposts =  $new_query->posts;    $i = 0;    if($type == 2){    }    $e = '';    $c =0;    if($type==3 && count($myposts)%2!=0){        $myposts[] =  false;    }    $image_size ='';    if($site_layout ==1 &&( $pbwith =='1_1' ||  $pbwith =='3_4')  && $type !=3){        $image_size = 'st_large';    }    // display as list    foreach( $myposts as $post ) : setup_postdata($post);        if($type==3){            if($c==0){                $e.='<div class="row">';                $e.='<div class="six columns b20">'.st_get_content(ST_TEMPLATE_DIR.'loop/loop-post.php',$post,array('display_type'=>$type,'i'=>$i,'image_size'=>$image_size)).'</div>';                $c++;            }else{                $e.='<div class="six columns b20">'.st_get_content(ST_TEMPLATE_DIR.'loop/loop-post.php',$post,array('display_type'=>$type,'i'=>$i,'image_size'=>$image_size)).'</div>';                $e.='<div class="clear"></div></div>';                $c=0;            }        }else{            $e.=st_get_content(ST_TEMPLATE_DIR.'loop/loop-post.php',$post,array('display_type'=>$type,'i'=>$i,'image_size'=>$image_size));        }        $i++;    endforeach;    $html .='<div class="loop-posts">'.$e.'</div>';    $p ='';    if(!is_home() && !is_front_page()) { // only true if not is home page or front page        if($show_paging=='y'){            $p =  st_post_pagination($new_query->max_num_pages,2, false);            if($p!=''){                $p = '<div class="pagination text-left t0">'.$p.'</div>';            }        }    }    wp_reset_postdata();    return '<div class="blog-wrap builder-item-wrapper">'.do_shortcode($html).$p.'<div class="clear"></div></div>';}add_shortcode( 'blog_post', 'st_blog_post_func' );function st_img_func( $atts, $caption='' ) {    extract( shortcode_atts( array(        'img_id' => 0,        'title' => '',        'url'=>'',        'caption'=>'',        'is_gallery'=>0    ), $atts ) );    extract($atts);    $attachment=wp_get_attachment_image_src($img_id, 'st_medium_thumb');    $html_format ='<div class="gird-box"> %1$s </div>';    $img = '<img src="'.$attachment[0].'" alt="'.esc_attr($title).'">';    $a_rel= $add_item= '';    if($is_gallery==1){        $image_full = wp_get_attachment_image_src($img_id, 'full');        $url = $image_full[0];        $a_rel =' rel="prettyPhoto" ';        $add_item ='                <span class="portfolio-thumb-hover"></span>                <span class="hover-lightbox-image"></span>            ';    }    if($url!=''){        $a = '<a '.$a_rel.' href="'.esc_attr($url).'" title="'.esc_attr($title).'"> '.$add_item.'</a> ';    }else{        $a ='   ';    }    $img = $a.$img;    $img = '<div class="portfolio-media-wrapper">'.$img.'</div>';    if($title!=''){        $title ='<div class="portfolio-desc"><h4 class="im-title">                 <a '.$a_rel.' href="'.esc_attr($url).'" title="'.esc_attr($title).'">'.esc_html($title).'</a>                 </h4>             </div>';    }    if($caption!=''){    }    return  sprintf($html_format, $img.$title .$caption);}add_shortcode( 'st_img', 'st_img_func' );function st_widget_func( $atts, $caption='' ){    extract( shortcode_atts( array(        'id' => ''    ), $atts ) );    if($id==''){        return '';    }    return st_get_content_from_func('dynamic_sidebar',$id);}add_shortcode( 'st_widget', 'st_widget_func' );/** ======================================== EDITOR SHORTCODE =============================================== */function st_heading_shortcode($number,$atts,$content=''){    extract( shortcode_atts( array(        'class'=>''    ), $atts ) );    if($class==''){        $class ='st-h1';    }else{        $class  ='st-h1 '.$class;    }    return  '<h'.$number.' class="'.esc_attr($class).'">'.$content.'</h'.$number.'>';}function st_h1_func($atts, $content='' ){    return st_heading_shortcode(1,$atts,$content);}add_shortcode( 'h1', 'st_h1_func' );///===function st_h2_func($atts, $content='' ){    return st_heading_shortcode(2,$atts,$content);}add_shortcode( 'h2', 'st_h2_func' );///===function st_h3_func($atts, $content='' ){    return st_heading_shortcode(3,$atts,$content);}add_shortcode( 'h3', 'st_h3_func' );///===function st_h4_func($atts, $content='' ){    return st_heading_shortcode(4,$atts,$content);}add_shortcode( 'h4', 'st_h4_func' );///===function st_h5_func($atts, $content='' ){    return st_heading_shortcode(5,$atts,$content);}add_shortcode( 'h5', 'st_h5_func' );///===function st_h6_func($atts, $content='' ){    return st_heading_shortcode(6,$atts,$content);}add_shortcode( 'h6', 'st_h6_func' );// buttonsfunction st_button_func( $atts, $content='' ){    extract( shortcode_atts( array(        'type' => '',        'color'=>'',        'link'=>'',        'icon'=>'',        'target'=>'',        'rounded'=>0,    ), $atts ) );    $class= array();    if($type){        $class[] = $type;    }    if($color!=''){        $class[]='btn_'.$color;    }else{        $class[] ='color';    }    if(intval($rounded)>0){        $class[] = 'rounded';    }    if($icon!=''){        $icon ='<i class="'.esc_attr($icon).'"></i>' ;    }    if($target!=''){        $target = ' target="'.$target.'" ';    }    if(trim($link)==''){        return '<button class="btn '.esc_attr(join(' ',$class)).'">'.$icon.esc_html($content).'</button>';    }else{        return '<a class="btn '.esc_attr(join(' ',$class)).'" '.$target.' href="'.$link.'">'.$icon.esc_html($content).'</a>';    }}add_shortcode( 'button', 'st_button_func' );// for columns and rowsfunction st_row( $atts, $content='' ){    extract( shortcode_atts( array(        'class' => '',        'id'=>'',    ), $atts ) );    $attr ='';    if($id!=''){        $attr.' id="'.esc_attr($id).'" ';    }    if($class!=''){        $class .='row '.$class;    }else{        $class ='row';    }    $attr.=' class="'.esc_attr($class).'"';    return  '<div class="row-wrapper"><div '.$attr.'>'.do_shortcode(trim($content)).' <div class="clear"></div> </div> </div>';}add_shortcode( 'row', 'st_row' );// for columns and rowsfunction st_col( $atts, $content='' ){    extract( shortcode_atts( array(        'class' => '',        'id'=>'',        'width'=>''    ), $atts ) );    $attr ='';    if($id!=''){        $attr.' id="'.esc_attr($id).'" ';    }    if($class!=''){        $class .='columns  b10 '.$class;    }else{        $class ='columns  b10';    }    if($width!=''){        $class =$width.' '.$class;    }else{        $class =$width.' twelve';    }    $attr.=' class="'.esc_attr($class).'"';    return  '<div '.$attr.'>'.do_shortcode(trim($content)).'</div>';}add_shortcode( 'col', 'st_col' );// other shortcodefunction st_clear_func($atts, $content='' ){    return '<div class="clear"></div>';}add_shortcode( 'clear', 'st_clear_func' );function st_divider_func($atts, $content='' ){    return '<div class="row"><div class="twelve columns"><div class="divider"></div></div></div>';}add_shortcode( 'divider', 'st_divider_func' );function st_space_func($atts, $content='' ){    if(isset($atts['height'])  && intval($atts['height'])>0){        $style = ' style="height: '.intval($atts['height']).'px; display: block;" ';    }else{        $style ='';    }    return '<div '.$style.' class="space"></div>';}add_shortcode( 'space', 'st_space_func' );// for videofunction st_video_func($atts, $content='' ){    $link = $atts['link'];    if($link==''){        return '';    }else{        return st_get_video($link).'<div class="video-shadow"></div>';    }}add_shortcode( 'video', 'st_video_func' );// for  Accordionfunction st_accordion_func($atts, $content=''){    $class= (isset($atts['class'])) ?  $atts['class'] : '';    if($class==''){        $class = 'st-accordion';    }else{        $class ='st-accordion '.$class;    }    return  '<ul class="'.esc_attr($class).'">'.do_shortcode($content).'</ul>';}function st_accordion_item_func($atts, $content=''){    extract( shortcode_atts( array(        'title' => '',        'class'=>''    ), $atts ) );    $title ='<h3 class="acc-title">'.esc_html($title).'<i class="ui-icon icon-chevron-down"></i></h3>';    return  '<li class="'.esc_attr($class).'">'.$title.'    <div class="acc-content" style="display: none;"><div class="txt-content">'.do_shortcode($content).'</div></div>    </li>';}add_shortcode( 'accordion', 'st_accordion_func' );add_shortcode( 'accordion_item', 'st_accordion_item_func' );// for  Togglefunction st_toggle_func($atts, $content=''){    $class= (isset($atts['class'])) ?  $atts['class'] : '';    if($class==''){        $class = 'st-toggle';    }else{        $class ='st-toggle '.$class;    }    return  '<ul class="'.esc_attr($class).'">'.do_shortcode($content).'</ul>';}function st_toggle_item_func($atts, $content=''){    extract( shortcode_atts( array(        'title' => '',        'class'=>''    ), $atts ) );    $title ='<h3 class="toggle-title sc-title ">'.esc_html($title).'<i class="ui-icon icon-plus"></i><i class="ui-icon icon-minus"></i></h3>';    return  '<li class="'.esc_attr($class).'">'.$title.'    <div class="toggle-content" style="display: none;"><div class="txt-content">'.do_shortcode($content).'</div></div>    </li>';}add_shortcode( 'toggle', 'st_toggle_func' );add_shortcode( 'toggle_item', 'st_toggle_item_func' );// for tabsfunction st_do_shortcode($content, $autop = FALSE){    $content = do_shortcode( $content );    if ( $autop ) {        $content = wpautop($content);    }    return $content;}function st_tabs_func($atts, $content = null){    extract(shortcode_atts(array(        'position' => ''    ), $atts));    if (!preg_match_all("/(.?)\[(tab)\b(.*?)(?:(\/))?\](?:(.+?)\[\/tab\])?(.?)/s", $content, $matches)) {        return do_shortcode($content);    }    else    {        for ($i = 0; $i < count($matches[0]); $i++) {            $matches[3][$i] = shortcode_parse_atts($matches[3][$i]);        }        $tabs_post = ( $position == 'left' ) ? 'tabs-left' : '';        $out = '<div class="st-tabs '. $tabs_post .'">';        $out.= '<ul class="tab-title">';        for ($i = 0; $i < count($matches[0]); $i++) {            $out.= '<li tab-id="tab-'. $i .'"><span>'. $matches[3][$i]['title'] .'</a></li>';        }        $out.= '</ul>';        $out.= '<div class="tab-content-wrapper">';        for ($i = 0; $i < count($matches[0]); $i++) {            $out.= '<div id="tab-'. $i .'" class="tab-content"><div class="txt-content">'. st_do_shortcode(trim($matches[5][$i]), TRUE) .'</div></div>';        }        $out.= '</div>';        $out.= '</div>';        return $out;    }}add_shortcode('tabs', 'st_tabs_func');function st_portfolio_func( $atts, $content='' ) {    global $wp_query;    global $post;    $tmp_post = $post;    extract( shortcode_atts( array(        'title' => 0,        'cats' => '',        'numpost'=>'-1',        'exclude'=>'',        'orderby'=>'ID',        'order'=>'DESC',        'pbwith'=>'1_1',        'num_col'=>4,        'site_layout'=>'',        'show_heading'=>'y',        'filter_type'=>'default',        'custom_filter_text'=>'',        'custom_filter_url'=>'',        'row_index'=>9 // not begin    ), $atts ) );    $wc = $pbwith;    $w=  explode('_',$wc);    $t = intval($w[0]);    $m = intval($w[1]);    if($m>0 and $t>0){        $c = $t/$m;    }else{        $c=1;    }    $html  = $heading  = $htitle='';    if($show_heading!='n'){        if( $title!=''){            $f_class='';            $htitle = esc_html($title);        }else{            $f_class=" hide-heading ";        }        $filter ='';        $is_filter = false;        if($filter_type=='default'){            $terms =  get_terms( 'portfolio_tag', array('include'=>$cats,'fields'=>'all') );            $filter = '<ul data-option-key="filter" class="cpt-filters'.$f_class.'">                    <li><a class="selected" href="#filter=*">'.__('All','smooththemes').'</a></li>';            foreach($terms as $term){                $filter.='<li><a  href="#filter=.'.esc_attr($term->slug).'">'.esc_html(stripslashes($term->name)).'</a></li>';            }            $filter.='</ul>';            $is_filter = true;        }else{            if($custom_filter_text!=''){                if(trim($custom_filter_url)==''){                    $custom_filter_url ='#';                }                $filter ='<a class="view-all" href="'.esc_attr($custom_filter_url).'">'.esc_html($custom_filter_text).'</a>';            }        }        $heading ='<div class="builder-title-wrapper clearfix'.( ($is_filter && $row_index==1 ) ? '  has_filter' : '  no_filter').'">                        <h3 class="builder-item-title">'.( ($is_filter && $row_index==1 ) ? '' : $htitle ).'</h3>                        <div class="builter-title-alt right">                            '.$filter.'                        </div>                        <div class="clear"></div>                    </div>';    } // end show heading    if(intval($numpost)>0){        $numpost = intval($numpost);    }else{        $numpost = -1; // get all portfolio    }    $args = array( 'posts_per_page' => $numpost );    if($exclude!=''){        $exclude= explode(',',$exclude);    }    $args['post__not_in'] = $exclude;    $args['orderby'] = $orderby;    $args['order'] = $order;    $args['post_type']='portfolio';    if(!empty($cats)){        $args['tax_query'] =array(            'relation' => 'AND',            array(                'taxonomy' => 'portfolio_tag',                'field' => 'id',                'terms' => explode(',',$cats),                'operator'=>'IN'            )        );    }    // added in ver 1.3    if(st_is_wpml()){        $args['sippress_filters'] = true;        $args['language'] = get_bloginfo('language');    }    //  echo var_dump($wp_query);    $new_query = new WP_Query($args);    //$myposts =  $wp_query->query($args);    $myposts = $new_query->posts;    $num_col = intval($num_col)>0 ?  intval($num_col) : 4 ;    $e = '';    $c =0;    $i = 1;    if(!isset($type))        $type ='';    $image_size ='st_medium';    // echo $num_col;    $col_txt = stpb_number_to_text(12/$num_col);    foreach( $myposts as $post ) : setup_postdata($post);        $term_list = wp_get_post_terms($post->ID, 'portfolio_tag', array("fields" => "all"));        $filter_class=array();        $caption=  array();        foreach($term_list as $term){            $filter_class[]= $term->slug;            $caption[] = $term->name ;        }        $ptitle = the_title_attribute( 'echo=0' );        $title =  sprintf( esc_attr__( 'Permalink to %s', 'smooththemes' ), $ptitle );        $link = get_permalink($post->ID);        $caption  = (!empty($caption)) ? join(esc_html(' / '),$caption) : '&nbsp;&nbsp;';        $caption =   '<div class="cpt-desc">'.$caption.'</div>';        $html.= '<div class="cpt-item item-isotope '.$col_txt.' columns b30 '.esc_attr(join(' ',$filter_class)).'">                            <div class="thumb-wrapper">                                '.st_post_thumbnail_gallery($post->ID).'                            </div>                             <div class="cpt-detail">                                <h2 class="cpt-title"><a href="'.$link.'">'.get_the_title($post->ID).'</a></h2>                                '.$caption.'                            </div>                        </div>';        if($i>=$num_col){            $html.='<div class="clear"></div>';            $i=1;        }else{            $i++;        }    endforeach;    wp_reset_query();    return '<div class="builder-item-wrapper builder-portfolio">                '.$heading.'                <div class="builder-item-content row'.( $is_filter ? ' has-isotope' : ' no-isotope').'">                    <div class="twelve columns b0">                        <div class="cpt-items row clearfix isotope">                        '.do_shortcode($html).'                        </div>                    </div>                </div>            </div>';}add_shortcode('portfolio', 'st_portfolio_func');// for entry contentfunction st_this_entry_func($atts, $content='' ){    global $post;    return apply_filters('the_content',$post->post_content);}add_shortcode( 'this_entry', 'st_this_entry_func' );function  st_shorcode_alert_func($atts,$content =''){    extract(shortcode_atts(array(        'alert_type' => ''    ), $atts));    if($alert_type!=''){        $alert_type =' alert-'.$alert_type;    }    $html  = '<div class="alert'.$alert_type.'"><a class="close" href="#"><i class="icon-remove"></i></a>'.do_shortcode($content).'<div class="clear"></div></div>';    return $html;}add_shortcode('alert', 'st_shorcode_alert_func');function st_post_gallery_func( $atts, $content='' ) {    global $wp_query;    global $post;    $current_post_id = $post;    extract( shortcode_atts( array(        'title' => 0,        'cats' => '',        'numpost'=>6,        'exclude'=>'',        'orderby'=>'ID',        'order'=>'DESC',        'pbwith'=>'1_1',        'num_col'=>4,        'site_layout'=>'',        'black_and_white'=>'',        'lightbox'=>'',        'row_index'=>9 // not begin    ), $atts ) );    $item_title ='';    if($title!=''){        $item_title ='<h3 class="builder-item-title">'.esc_html($title).'</h3>';    }    $paged = (get_query_var('paged')) ? get_query_var('paged') : 1;    if(intval($numpost)>0){        $numpost = intval($numpost);    }else{        $numpost = get_option('gallery_num_item',10); // get all portfolio    }    $args = array( 'posts_per_page' => $numpost );    if($exclude!=''){        $exclude= explode(',',$exclude);    }    $args['post__not_in'] = $exclude;    $args['orderby'] = $orderby;    $args['order'] = $order;    $args['post_type']='gallery';    $args['paged'] = $paged;    if(!empty($cats)){        $args['tax_query'] =array(            'relation' => 'AND',            array(                'taxonomy' => 'gallery_tag',                'field' => 'id',                'terms' => explode(',',$cats),                'operator'=>'IN'            )        );    }    // added in ver 1.3    if(st_is_wpml()){        $args['sippress_filters'] = true;        $args['language'] = get_bloginfo('language');    }    //  echo var_dump($wp_query);    $new_query = new WP_Query($args);    $myposts = $new_query->posts;    $num_col = intval($num_col)>0 ?  intval($num_col) : 4 ;    $next_page_link='';    if($paged<$new_query->max_num_pages){        $next_page_link = get_pagenum_link($paged+1);    }    if(get_post_meta('_wp_page_template')=='tpl-gallery-full-width.php'){        $num_col = 4;    }    // echo $num_col;    $col_txt = stpb_number_to_text(12/$num_col);    $items ='';    foreach( $myposts as $post ) {        setup_postdata($post);        $title = get_the_title($post->ID);        $term_list = wp_get_post_terms($post->ID, 'gallery_tag', array("fields" => "all"));        $filter_class=array();        $tags=  array();        foreach($term_list as $term){            $filter_class[]= $term->slug;            $tags[] = $term->name ;        }        $tags  = (!empty($tags)) ? join(esc_html(' / '),$tags) : '';        $src = st_get_first_gallery_thumbnail_src($post->ID);        if ($lightbox=='y') $class_item = 'ajax-action-lightbox';        else $class_item = 'ajax-action';        $items.=' <div class="item '.$col_txt.' column"  data-width-x="1">	                        <div class="item-inner">	                            <a class="img-wrapper '.$class_item.'" href="#" ajax-request="action=ajax_gallery_details&galleryID='.$post->ID.'"  > <img alt="" src="'.$src.'">	                            <div class="overlay">	                                <div class="info"></div>	                            </div> </a>	                            <div class="caption">	                                <p>	                                    '.$tags.'	                                </p>	                                <h3><a class="'.$class_item.'" href="#" ajax-request="action=ajax_gallery_details&galleryID='.$post->ID.'" >'.$title.'</a></h3>	                            </div>	                        </div>	               </div>';    } // end foreach posts    wp_reset_query();    $p ='';    if($next_page_link!=''){        $p ='              <div class="clear"></div>		      <div class="isotope-loadmore">		            <a class="bg btn" href="'.$next_page_link.'" loading-txt="'.__('Loading...','smooththemes').'">'.__('Load more','smooththemes').'</a>		      </div>';    }    if($black_and_white=='y'){        $p.='<script type="text/javascript">                var gBlackAndWhite =  true;             </script>';    }    return '<div class="builder-item-wrapper builder-gallery'.($black_and_white=='y' ? ' black-and-white' : '' ).'">                '.$item_title.'                <div class="gallery-details-wrapper"></div>                <div class="isotope  row list-gallery-items">'.$items.'</div>'.$p.'          </div>';}add_shortcode('post_gallery', 'st_post_gallery_func');function st_block_quote_func($atts, $content='' ){    return '<div class="st-blockquote">            <i class="icon-quote-left icon-4x pull-left icon-muted"></i> '.$content.'            </div>';}add_shortcode( 'block_quote', 'st_block_quote_func' );